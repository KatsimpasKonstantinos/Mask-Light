openapi: 3.0.3
info:
  title: Mask Light 1.0
  description: |-
    API Endpoints for ESP
  contact:
    email: konstantinos@katsimpas.com
  license:
    name: MIT
    url: TODO
  version: TODO
externalDocs:
  description: GitHub
  url: https://github.com/KatsimpasKonstantinos/Mask-Light
servers:
  - url: http://192.168.115.165:80
tags:
  - name: kff
    description: KFF - individual Pixel data (Frame, Y, X)
  - name: mode
    description: KFF - individual Pixel data (Frame, Y, X)

paths:

  /kff:
    get:
      tags:
        - kff
      summary: Get current KFF 
      operationId: getCurrentKFF
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KFF"
          
    post:
      tags:
        - kff
      summary: Insert new kff into esp
      operationId: addKFF
      requestBody:
        description: Insert new kff into esp
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KFF"
          application/xml:
            schema:
              $ref: "#/components/schemas/KFF"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/KFF"
        required: true
      responses:
        "200":
          description: Successful operation
        "405":
          description: Invalid input
   
  /mode:
    get:
      tags:
        - mode
      summary: Get all modes
      operationId: getCurrentMode
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Mode"
            
  /mode/{id}:
    get:
      tags:
        - mode
      summary: Get a certain mode by ID
      operationId: getModeById
      parameters:
        - name: id
          in: path
          description: ID of the mode to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mode"
        "404":
          description: Mode not found  
          
    put:
      tags:
        - mode
      summary: Update a certain mode by ID
      operationId: updateModeById
      parameters:
        - name: id
          in: path
          description: ID of the mode to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated mode object
        required: true
        content:
          application/json:
             schema:
              $ref: "#/components/schemas/Mode"
      responses:
        "200":
         description: Mode updated successfully
         content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mode"
        "404":
          description: Mode not found      
        
  
components:
  schemas:

    KFF:
      type: object
      properties:
        frames:
          type: number
        matrixY:
          type: number
        matrixY::
          type: number
        speed:
          type: number
        data:
          type: object
      xml:
        name: kff
        
    Mode:
      type: object
      properties:
        Id:
          type: number
        description:
          type: string
        active:
          type: boolean
    
        
        
        
        
        
        
        
        
        
        
        